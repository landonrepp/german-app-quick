name: Release Builds

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-and-release:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: "macos-latest" # for Arm based macs (M1 and above).
            args: "--target aarch64-apple-darwin"
          - os: "macos-latest" # for Intel based macs.
            args: "--target x86_64-apple-darwin"
          - os: "ubuntu-22.04" # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ""
          - os: "windows-latest"
            args: ""

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Add wasm32 target
        run: rustup target add wasm32-unknown-unknown

      - name: Install wasm-pack
        uses: jetli/wasm-pack-action@v0.3.0
        with:
          version: "latest"

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          # Tauri + WebKitGTK requirements
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.1-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf \
            libssl-dev \
            libayatana-ido3-0.4-dev || true

      - name: Build Rust WASM (lang-detection)
        run: |
          wasm-pack build lang-detection --release --target bundler --out-dir pkg

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install app dependencies
        run: npm ci

      - name: Build Next.js (standalone)
        run: npm run build

      # Build and upload release assets using the official Tauri action
      - name: Tauri build and upload
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CI: true
        with:
          projectPath: .
          tauriScript: npm run tauri:build
          args: ${{ matrix.args }}
          # Attach to the current release when triggered by a published release
          releaseId: ${{ github.event.release.id }}
          # For manual runs without a release, create/update a draft release using the current ref
          tagName: ${{ github.ref_name }}
          releaseName: German App ${{ github.ref_name }}
          releaseDraft: false
          prerelease: false
